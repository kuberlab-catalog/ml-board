apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mlboard-v2
  labels:
    app: mlboard-v2
    workspace: kuberlab
    component: master
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mlboard-v2
        component: master
        workspace: kuberlab
    spec:
      {{- if .Values.mlboard.nodeSelector.enabled }}
      nodeSelector:
      {{- range $key, $value := .Values.mlboard.nodeSelector.labels }}
        {{ $key }}: "{{ $value }}"
      {{- end }}
      {{- end }}
      {{- if .Values.global.useRBAC }}
      serviceAccountName: mlboard
      {{- end }}
      containers:
      - name: mlboard
        command: ["board"]
        image: '{{ printf "%s:%s" .Values.mlboard.Image.Name .Values.mlboard.Image.Tag }}'
        imagePullPolicy: Always
        env:
          - name: PGHOST
            value: '{{ printf "mlboard-postgresql.%s" .Release.Namespace }}'
          - name: PGDATABASE
            value: postgres
          - name: PGUSER
            value: postgres
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: mlboard-postgresql
                key: postgres-password
          {{- if .Values.global.useRBAC }}
          - name: SERVICE_ACCOUNT_NAME
            value: mlboard
          {{- end }}
          - name: CRON_ENABLED
            value: '{{ .Values.mlboard.cron.enabled }}'
          - name: FETCHING_PERIOD
            value: '{{ .Values.mlboard.fetching.pattern }}'
          - name: PROMETHEUS_FETCH_INTERVAL
            value: '{{ .Values.mlboard.fetching.prometheusInterval }}'
          {{- if .Values.mlboard.nodeSelector.default_gpu }}
          - name: DEFAULT_GPU_NODE_SELECTOR
            value: '{{ .Values.mlboard.nodeSelector.default_gpu }}'
          {{- end }}
          {{- if .Values.mlboard.nodeSelector.default_gpu }}
          - name: DEFAULT_CPU_NODE_SELECTOR
            value: '{{ .Values.mlboard.nodeSelector.default_cpu }}'
          {{- end }}

        readinessProbe:
          httpGet:
            path: /probe
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        ports:
        - containerPort: 8082
          name: mlboard
        volumeMounts:
        - name: config-volume
          mountPath: /etc/mlboard/
        - name: data
          mountPath: /pacak-git-bare
          subPath: pacak-git-bare
        - name: data
          mountPath: /pacak-git-local
          subPath: pacak-git-local
      volumes:
      - name: config-volume
        configMap:
          defaultMode: 420
          name: mlboard-config
      - name: data
        {{- if .Values.mlboard.git.persistence.fromProvider }}
        persistentVolumeClaim:
          claimName: mlboard-git
        {{- else }}
{{ toYaml .Values.mlboard.git.persistence.volume | indent 8 }}
        {{- end }}